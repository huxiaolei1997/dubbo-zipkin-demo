<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">
    <!-- 定义 HelloService 的应用名 -->
    <dubbo:application name="hello-service-provider"/>

    <!-- 指定注册中心地址 -->
    <dubbo:registry address="zookeeper://139.196.140.168:2181"/>

    <!-- 使用 Dubbo 原生协议在 20880 端口上暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!-- 将 HelloServiceImpl 的实现声明成一个 spring bean -->
    <bean id="helloService" class="com.xlh.dubbo.zipkin.demo.service.hello.HelloServiceImpl"/>

    <!-- 将 HelloServiceImpl 声明成一个 Dubbo 服务 -->
    <dubbo:service interface="com.xlh.dubbo.zipkin.demo.api.HelloService" ref="helloService"/>

    <!-- 1. 修改 dubbo 服务暴露配置，在 filter chain 中增加 zipkin 的 tracing 过滤器 -->
    <dubbo:service interface="com.xlh.dubbo.zipkin.demo.api.HelloService" ref="helloService" filter="tracing"/>

    <!-- 2. zipkin 相关的配置 -->
    <!-- 使用 OKHttp 来发送 trace 信息到 Zipkin Server。这里的 Zipkin Server 启动在本地 -->
    <bean id="sender" class="zipkin2.reporter.beans.OkHttpSenderFactoryBean">
        <property name="endpoint" value="http://localhost:9411/api/v2/spans"/>
    </bean>

    <bean id="tracing" class="brave.spring.beans.TracingFactoryBean">
        <property name="localServiceName" value="hello-service"/>
        <property name="spanReporter">
            <bean class="zipkin2.reporter.beans.AsyncReporterFactoryBean">
                <property name="sender" ref="sender"/>
                <!-- wait up to half a second for any in-flight spans on close -->
                <property name="closeTimeout" value="500"/>
            </bean>
        </property>
        <property name="currentTraceContext">
            <bean class="brave.spring.beans.CurrentTraceContextFactoryBean">
                <property name="scopeDecorators">
                    <bean class="brave.context.slf4j.MDCScopeDecorator" factory-method="create"/>
                </property>
            </bean>
        </property>
    </bean>
</beans>